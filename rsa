#!/usr/bin/python3
"""module obtains 2 prime factors of a number"""


import math
import sys
from collections import Counter


def prime_factors(n):
    """Return a list of prime factors of n"""
    factors = []
    d = 2
    while d*d <= n:
        count = 0
        while (n % d) == 0:
            count += 1
            n //= d
        if count > 0:
            factors.append((d, count))
        d += 1
    if n > 1:
        factors.append((n, 1))
    return factors


def prime_factor_pairs(n):
    """Return a list of all prime factor pairs of n."""
    factors = prime_factors(n)
    pairs = []
    for i in range(len(factors)):
        for j in range(i, len(factors)):
            p, m = factors[i]
            q, n = factors[j]
            if p == q and m == n == 1:
                continue
            if p*q == n:
                pairs.append((p, q))
            if len(pairs) == 0 and len(factors) == 2:
                pairs.append((factors[0][0], factors[1][0]))
            return pairs


def main():
    """function to open test file to run get_factor"""
    if len(sys.argv) < 2:
        print("Usage: python <file_name> <test_file>")
        return

    file_name = sys.argv[1]

    with open(file_name, 'r') as f:
        for line in f:
            n = int(line.strip())

            if n < 0:
                print(f"{n} must be a positive integer")
                break

            pairs = prime_factor_pairs(n)
            if pairs:
                print("{:d}={:d}*{:d}".format(n, pairs[0][0], pairs[0][1]))
            else:
                print(f"{n} is not the product of two primes")


if __name__ == "__main__":
    main()
